//
//  BuiltinBind.swift
//  GodotSwift
//
//  Created by Miguel de Icaza on 2/1/21.
//  Copyright Â© 2021 Miguel de Icaza. All rights reserved.
//

import Foundation

func builtinBind (start: GodotBuiltinApi)
{
    var res = """
// Generated by GodotSwift code generator
import Foundation
import Godot

"""

    for x in start {
        let typeName = x.name
        if typeName == "Utilities" {
            // generate something later
            continue
        }
        if !isCoreType(name: typeName) {
            continue
        }
        print ("type: \(x.name)")
        
        res += "public struct \(x.name) {\n"
        let gdname = builtinTypeToGdName (typeName)
        res += indent ("var _\(gdname): \(gdname) = \(gdname)()")
        for m in x.methods {
            let ret = getGodotType(m.returnType)
            let retSig = ret == "" ? "" : "-> \(ret)"
            var args = ""
            
            for arg in m.arguments {
                if args != "" { args += ", " }
                args += getArgumentDeclaration(arg)
            }
            var mr = "func \(escapeSwift (snakeToCamel(m.name))) (\(args))\(retSig) {\n"
            mr += "   abort ()\n"
            mr += "}\n"
            res += indent (mr)
        }
        res += "}\n\n"
    }
    
    try! res.write(toFile: "/Users/miguel/cvs/GodotSwiftLink/Sources/GodotSwift/GodotSwift.gen.swift", atomically: true, encoding: .utf8)
}
